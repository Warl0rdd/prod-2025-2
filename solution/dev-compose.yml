services:
  database:
    container_name: database
    expose:
      - "5432:5432"
    ports:
        - "5432:5432"
    env_file:
      - .env
    image: postgres:16.6-alpine3.19
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - database:/var/lib/postgresql/data
    restart: always

  redis:
    container_name: redis
    image: redis:6.2-alpine
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  af:
    image: lodthe/prod-backend-antifraud
    container_name: af
    ports:
      - '9090:9090'
    expose:
      - '9090'
    environment:
      - SERVER_PORT=9090
      - CACHE_DURATION_MS=5000
    restart: unless-stopped

  backend:
    build: .
    restart: always
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
volumes:
  database:
  redis: